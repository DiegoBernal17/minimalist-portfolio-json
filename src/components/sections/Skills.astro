---
import Section from "../Section.astro";
import SkllIcon from "@/components/SkillIcon.astro";

import { getI18N } from "@/i18n/";

const { currentLocale } = Astro;
const i18n = getI18N({ currentLocale });
const { skills } = i18n.cv;

const allSkills: { [x: string]: typeof skills } = {
  frontend: [],
  backend: [],
  fullstack: [],
  databases: [],
  other: [],
};

skills.forEach((skill) => {
  if (skill.category.includes("Frontend")) {
    allSkills.frontend.push(skill);
  } else if (skill.category.includes("Backend")) {
    allSkills.backend.push(skill);
  } else if (skill.category.includes("Fullstack")) {
    allSkills.fullstack.push(skill);
  } else if (skill.category.includes("Databases")) {
    allSkills.databases.push(skill);
  } else if (skill.category.includes("Other")) {
    allSkills.other.push(skill);
  }
});
---

<Section title={i18n.SKILLS}>
  {
    Object.entries(allSkills).map(([category, skills]) => (
      <div class="skills">
        <h4 class="category-title">{category}:</h4>
        <ul>
          {skills.map(({ name }) => (
            <li>
              <span class="no-print">
                <SkllIcon name={name} />
              </span>
              <span>{name}</span>
            </li>
          ))}
        </ul>
      </div>
    ))
  }
</Section>

<style>
  .category-title {
    font-size: 1.1rem;
    font-weight: 500;
    margin-bottom: 0.4rem;
  }
  ul {
    display: inline-flex;
    gap: 8px;
    flex-wrap: wrap;
  }

  li {
    display: flex;
    align-items: center;
    gap: 4px;
    color: #555;
    font-size: 0.8rem;
    font-weight: 500;
    padding: 0.2rem 0.6rem;
    border-radius: 6px;

    background-color: rgb(0 0 0 / 10%);
    filter: invert(50%);

    transition-property: background-color, color;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.1s;

    user-select: none;
  }

  li:hover {
    background-color: rgb(0 0 0 / 30%);
    color: #000;
  }

  @media print {
    li {
      background-color: rgb(248, 248, 248);
      filter: none;
      transition-property: none;
      user-select: text;
      color: var(--text-color);
    }
  }
</style>
